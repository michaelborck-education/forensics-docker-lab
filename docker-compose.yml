# Forensic Analysis Lab (containers run tools against read-only evidence)
services:
  # One-stop CLI toolbox (Sleuth Kit, TestDisk/PhotoRec, Foremost, ewf-tools, exiftool, hashdeep, bulk_extractor, YARA, Volatility3)
  # Usage:
  #   Interactive mode (recommended): docker compose run --rm -it dfir
  #   One-off command: docker compose run --rm dfir fls -r /evidence/disk.img
  #   Background mode: docker compose up -d dfir && docker compose exec dfir bash
  dfir:
    build: ./images/dfir-cli
    image: forensic/dfir-cli:latest
    platform: linux/amd64
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    working_dir: /cases
    volumes:
      - ./evidence:/evidence:ro    # <-- mount evidence READ-ONLY
      - ./cases:/cases             # outputs & working files
      - ./rules:/rules:ro          # optional YARA rules, etc.
    tmpfs:
      - /tmp
      - /usr/local/lib/python3.13/dist-packages/volatility3/symbols:uid=1000,gid=1000
    stdin_open: true                # Keep STDIN open for interactive sessions
    tty: true                       # Allocate pseudo-TTY for interactive sessions
    # Note: No 'command' specified - uses Dockerfile CMD (/bin/bash) by default

  # Plaso (log2timeline) for super timelines
  plaso:
    image: log2timeline/plaso:latest
    platform: linux/amd64
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    working_dir: /cases
    volumes:
      - ./evidence:/evidence:ro
      - ./cases:/cases
    tmpfs:
      - /tmp
    command: ["sleep", "infinity"]

  # Volatility 3 for memory forensics (Windows 7+)
  vol3:
    image: sk4la/volatility3:latest
    platform: linux/amd64
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    working_dir: /cases
    volumes:
      - ./evidence:/evidence:ro
      - ./cases:/cases
    tmpfs:
      - /tmp
    command: ["sleep", "infinity"]

  # Volatility 2 for legacy Windows (XP, 2000, NT)
  vol2:
    image: forensic/volatility2:latest
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    working_dir: /cases
    volumes:
      - ./evidence:/evidence:ro
      - ./cases:/cases
    tmpfs:
      - /tmp
    command: ["sleep", "infinity"]

  # YARA scanner (use with ./rules)
  yara:
    image: blacktop/yara:latest
    platform: linux/amd64
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    working_dir: /cases
    volumes:
      - ./evidence:/evidence:ro
      - ./cases:/cases
      - ./rules:/rules:ro
    tmpfs:
      - /tmp
    command: ["sleep", "infinity"]

  # Optional GUI: Autopsy over noVNC in your browser at http://localhost:8080/vnc.html
  # Note: community images vary; if it doesn't start on your OS, keep using CLI tools above.
  autopsy:
    image: eecs388/autopsy:latest  # More up-to-date and multi-platform
    depends_on:
      - novnc
    environment:
      - DISPLAY=novnc:0.0
    networks: [x11]
    volumes:
      - ./cases:/cases
      - ./evidence:/evidence:ro
    # Note: No change needed for _JAVA_OPTIONS, but be aware if performance issues arise

  novnc:
    image: theasp/novnc:latest # This image also supports multiple architectures
    ports:
      - "8080:8080"
    environment:
      - DISPLAY_WIDTH=${DISPLAY_WIDTH}
      - DISPLAY_HEIGHT=${DISPLAY_HEIGHT}
      - RUN_XTERM=no
    networks: [x11]

  # Chain-of-custody helper: hashes everything under /evidence and appends to /cases/chain_of_custody.csv
  hashlog:
    image: python:3.12-alpine
    platform: linux/amd64
    user: "${PUID:-1000}:${PGID:-1000}"
    read_only: true
    volumes:
      - ./evidence:/evidence:ro
      - ./cases:/cases
      - ./scripts:/scripts:ro
    command: ["python", "/scripts/hashlog.py", "/evidence", "/cases/chain_of_custody.csv", "sha256"]
    environment:
      - COC_NOTE=initial intake

networks:
  x11: {}
